"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}define(["SwiftOtter_Test/js/stripe-management.babel","SwiftOtter_Test/js/paypal-management.babel","SwiftOtter_Test/js/renderer/slide/next-button.babel","SwiftOtter_Test/js/renderer/slide/previous-button.babel","SwiftOtter_Test/js/ga.babel","SwiftOtter_Theme/js/field.babel","SwiftOtter_Test/js/api.babel","SwiftOtter_Test/js/token-management.babel"],function(i,o,e,s,n,a,l,r){function c(e,t,n){var a='\n          <li class="test-question test-question--payment test-question--payment" data-question-id="'.concat(this.data.id,'">\n            <div class="payment__details">\n              <div class="payment__value-prop">\n                  <h2 class="test-question__title">').concat(this.data.question,'</h2>\n                  <div class="test-question__subtext">').concat(this.data.subtext,'</div>\n                </div>\n                <div class="payment__form">\n                    <ul class="payment__choice">\n                        <li class="payment__one-choice">\n                            <label class="payment__choice--selected">\n                                <input type="radio" class="payment__choice-option" value="once" name="payment__choice-option" checked="checked"/>\n                                <div class="payment__selector"></div>\n                                <span><b>One take</b><br/><br/>').concat(jsonConfig.formatted_price,'</span>\n                            </label>\n                        </li>\n                        <li class="payment__unlimited-choice">\n                            <label>\n                                <input type="radio" class="payment__choice-option" value="month" name="payment__choice-option" />\n                                <div class="payment__selector"></div>\n                                <span>1 month of<br/><b>unlimited takes</b><br/><br/>').concat(jsonConfig.formatted_price_unlimited,'</span>\n                            </label>\n                        </li>\n                    </ul>\n                    \n                  <div class="test-question__payment-request-button"></div>\n                  <div class="test-question__payment-submit">\n                      <div class="test-question__payment-details">\n                          <div class="test-question__payment-email">\n                            <div class="field">\n                                <label class="label" for="payment-name">Name</label>\n                                <input type="text" class="input-text" id="payment-name').concat(this.data.id,'" value="').concat(localStorage.hasOwnProperty("name")?localStorage.name:"",'"></label>\n                            </div>\n                            <div class="field">\n                                <label class="label" for="payment-email">Email</label>\n                                <input type="email" class="input-text" id="payment-email').concat(this.data.id,'" value="').concat(localStorage.hasOwnProperty("email")?localStorage.email:"",'"></label>\n                            </div>\n                            <div class="field payment__password">\n                                <label class="label" for="payment-password">\n                                <span class="payment__password-tologin-preface">Your Login </span>Password</span>\n                                <br/><small class="payment__password-note">the entered email is already registered, so you need to login</small>\n                                <small class="payment__password-toregister">for a new account</small>\n                                </label>\n                                <input type="password" class="input-text" id="payment-password').concat(this.data.id,'"></label>\n                            </div>\n                          </div>\n                          <div class="test-question__payment-type"><span>Pay with Paypal:</span><div class="test-question__paypal paypal-button"></div></div>\n                          <div class="test-question__payment-divider">Or Credit/Debit Card:</div>\n                          <div class="test-question__payment-card"></div>\n                      </div>\n                      <div class="test-question__payment-button">\n                      <div class="test-question__payment-errors"></div>\n                      <button class="test-question__pay test-question__cta-button info-button">').concat(this.config.icons.secure,' <span class="payment__action-login" style="display: none">Login and </span>Pay</button>\n                      Payments secured by Stripe. 1 month of unlimited takes is <b>not</b> a subscription. You will only be charged once.\n                      </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="test-question__buttons">\n              <h3 class="test-question__payment-alternate">OR</h3>\n              <button class="test-question__goto-survey test-question__cta-button info-button" data-question-id="').concat(this.data.id,'">To Grade Free Test</button>\n              ').concat(s(this.data,e,t),"\n            </div>\n          </li>");return document.createRange().createContextualFragment(a).firstElementChild}function t(){var t=this;paypal.Button.render({env:jsonConfig.paypal_env,client:{sandbox:jsonConfig.paypal_sandbox_client_id,production:jsonConfig.paypal_production_client_id},locale:"en_US",style:{size:"small",color:"gold",shape:"rect"},commit:!0,payment:function(e,n){var a=this,s={transactions:[{amount:{total:function(){return this.el.querySelector('[value="month"]').checked?jsonConfig.unlimited_price:jsonConfig.price}.call(this),currency:jsonConfig.currency_code},description:function(){return jsonConfig.name+" - "+this.el.querySelector('[value="month"]').checked?"1 month UNLIMITED":"1 take"}.call(this)}]};return new paypal.Promise(function(t,e){m.call(a,{}).then(function(){_.call(a),n.payment.create(s).then(function(e){t(e)})},function(){h.call(a),e("Validation failed")})})}.bind(this),onAuthorize:function(e){return f.call(t,"paypal",e.payerID,e.paymentID)}},'[data-question-id="'+this.data.id+'"] .paypal-button')}function d(){var t=this;this.el.querySelector(".test-question__pay").addEventListener("click",function(e){return function(e){var n=this;(function(e,t){var n=this;e.preventDefault();var a=this.el.querySelector("#payment-email"+this.data.id).value,s=this.el.querySelector("#payment-name"+this.data.id).value;m.call(this,e).then(function(){localStorage.name=s,localStorage.email=a,_.call(n),t(s,a)})}).call(this,e,function(e,t){i.getStripe().createToken(n.card,{name:t,country:jsonConfig.hasOwnProperty("country")?jsonConfig.country:"United States"}).then(function(e){e.error?(h.call(n),n.el.querySelector(".test-question__payment-errors").textContent=e.error.message):(n.el.querySelector(".test-question__payment-errors").innerText="",f.call(n,"stripe",e.token))})})}.call(t,e)}),Array.prototype.forEach.call(this.el.querySelectorAll(".field"),function(e){return a({},e)}),Array.prototype.forEach.call(this.el.querySelectorAll(".payment__choice-option"),function(e){return e.addEventListener("change",function(e){var t=e.currentTarget;Array.prototype.forEach.call(this.el.querySelectorAll(".payment__choice label"),function(e){return e.classList.remove("payment__choice--selected")}),t.parentNode.classList.add("payment__choice--selected"),y.call(this)}.bind(t))}),this.el.querySelector('[id="payment-email'+this.data.id+'"]').addEventListener("change",u.bind(this))}function u(){var t=this,e=this.el.querySelector('[id="payment-email'+this.data.id+'"]').value;e?this.api.needsToLogin(e).then(function(e){t.needsToLogin=e,y.call(t)}):y.call(this)}function p(){return!this.needsToLogin&&this.el.querySelector('[value="month"]').checked}function y(){var e=p.call(this);!this.needsToLogin&&!e||jsonConfig.logged_in?this.el.querySelector(".payment__password").style.display="none":(this.el.querySelector(".payment__password").style.display="block",this.el.querySelector(".payment__password-note").style.display="none",this.needsToLogin&&(this.el.querySelector(".payment__password-note").style.display="inline"),this.el.querySelector(".payment__action-login").style.display=e?(this.el.querySelector(".payment__password-toregister").style.display="inline",this.el.querySelector(".payment__password-tologin-preface").style.display="none"):(this.el.querySelector(".payment__password-toregister").style.display="none",this.el.querySelector(".payment__password-tologin-preface").style.display="inline"))}function m(o,e){var l=this;return new Promise(function(t,n){var e=l.el.querySelector("#payment-email"+l.data.id).value,a=l.el.querySelector("#payment-name"+l.data.id).value,s=l.el.querySelector("#payment-password"+l.data.id).value;if(!e||!a)return l.el.querySelector(".test-question__payment-errors").textContent="You must specify your name and email.",n(),!1;if(-1===e.indexOf("@"))return l.el.querySelector(".test-question__payment-errors").textContent="You must specify a valid email.",n(),!1;if(-1===a.indexOf(" "))return l.el.querySelector(".test-question__payment-errors").textContent="You must specify a first and last name (separated by a space).",n(),!1;if(l.needsToLogin&&!s)return l.el.querySelector(".test-question__payment-errors").textContent="You must specify a password.",n(),!1;if(l.needsToLogin&&!jsonConfig.logged_in)return _.call(l),r.login(e,s).then(function(e){e.success?(l.needsToLogin=!1,t.call(l,o)):(h.call(l),l.el.querySelector(".test-question__payment-errors").textContent=e.error,n())});if(p.call(l)&&!jsonConfig.logged_in){var i=a.split(" ");return _.call(l),r.register(e,s,i[0],i[1]).then(function(e){e.success?(l.needsToLogin=!1,t.call(l,o)):(h.call(l),l.el.querySelector(".test-question__payment-errors").textContent=e.error,n())})}t.call(l,o)})}function _(){this.el.querySelector(".payment__details").classList.add("is-loading")}function h(){this.el.querySelector(".payment__details").classList.remove("is-loading")}function f(e,t,n){var a=this,s=function(e){var t=this.el.querySelector("#payment-email"+this.data.id).value,n=this.el.querySelector("#payment-name"+this.data.id).value,a="USD",s="66048";window.hasOwnProperty("jsonConfig")&&jsonConfig.hasOwnProperty("currency_code")&&(a=jsonConfig.currency_code);e.hasOwnProperty("card")&&e.card.hasOwnProperty("address_zip")&&e.card.address_zip&&(s=e.card.address_zip);var i=function(){return this.el.querySelector('[value="month"]').checked?"month":"once"}.call(this);return{email:t,name:n,currency:a,zip:s,choice:i}}.call(this,t);"stripe"===e?i.createOrder(t.id,s.email,s.name,s.zip,s.currency,s.choice).then(function(e){v.call(a,e)}):o.createOrder(t,n,s.email,s.name,s.zip,s.currency,s.choice).then(function(e){v.call(a,e)})}function v(e){if(h.call(this),e.hasOwnProperty("message"))this.el.querySelector(".test-question__payment-errors").innerText=e.message;else{n.purchase(e.order_number,e.test.base_price);var t=new CustomEvent("test:reloadData",{detail:{testData:e.test,details:e,from:this.data.id}});document.body.dispatchEvent(t)}}return function(){function n(e,t){_classCallCheck(this,n),this.config=e,this.data=t,this.elements=i.getStripe().elements(),this.api=new l(e),this.needsToLogin=!1}return _createClass(n,[{key:"render",value:function(e,t,n){return this.el=c.call(this,e,t,n),d.call(this),function(){var t=this,e=this.elements.create("card",{style:{base:{color:"#32325d",lineHeight:"18px",fontFamily:'"Helvetica Neue", Helvetica, sans-serif',fontSmoothing:"antialiased",fontSize:"16px","::placeholder":{color:"#32325d"}},invalid:{color:"#fa755a",iconColor:"#fa755a"}}});(this.card=e).mount(this.el.querySelector(".test-question__payment-card")),e.addEventListener("change",function(e){document.getElementById("card-errors"),e.error?t.el.querySelector(".test-question__payment-errors").textContent=e.error.message:t.el.querySelector(".test-question__payment-errors").textContent=""})}.call(this),u.call(this),jsonConfig.hasOwnProperty("has_unlimited_price")&&jsonConfig.has_unlimited_price||(this.el.querySelector(".payment__choice").style.display="none"),this.el}},{key:"afterShow",value:function(){t.call(this)}}]),n}()});
//# sourceMappingURL=payment.babel.min.js.map
